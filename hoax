do local exe_name,exe_version=identifyexecutor();local function home999() end local function home888() end if (exe_name~="Wave Windows") then hookfunction(home888,home999);if (isfunctionhooked(home888)==false) then game.Players.LocalPlayer:Destroy();return LPH_CRASH();end end local function check_env(env) for _,func in env do if (type(func)~="function") then continue;end local functionhook=isfunctionhooked(func);if functionhook then game.Players.LocalPlayer:Destroy();return LPH_CRASH();end end end check_env(getgenv());check_env(getrenv());local Lua_Fetch_Connections=getconnections;local Lua_Fetch_Upvalues=getupvalues;local Lua_Hook=hookfunction;local Lua_Hook_Method=hookmetamethod;local Lua_Unhook=restorefunction;local Lua_Replace_Function=replaceclosure;local Lua_Set_Upvalue=setupvalue;local Lua_Clone_Function=clonefunction;local Game_RunService=game:GetService("RunService");local Game_LogService=game:GetService("LogService");local Game_LogService_MessageOut=Game_LogService.MessageOut;local String_Lower=string.lower;local Table_Find=table.find;local Get_Type=type;local Current_Connections={};local Hooked_Connections={};local function Test_Table(Table,Return_Type) for TABLE_INDEX,TABLE_VALUE in Table do if (type(TABLE_VALUE)==String_Lower(Return_Type)) then return TABLE_VALUE,TABLE_INDEX;end continue;end end local function Print_Table(Table) table.foreach(Table,print);end if getgenv().DEBUG then print("[auth.injected.live] Waiting...");end local good_check=0;function auth_heart() return true,true;end function Lua_Common_Intercept(old,...) print(...);return old(...);end function XVNP_L(CONNECTION) local s,e=pcall(function() local OPENAC_TABLE=Lua_Fetch_Upvalues(CONNECTION.Function)[9];local OPENAC_FUNCTION=OPENAC_TABLE[1];local IGNORED_INDEX={3,12,1,11,15,8,20,18,22};Lua_Set_Upvalue(OPENAC_FUNCTION,14,function(...) return function(...) local args={...};if ((type(args[1])=="table") and args[1][1]) then pcall(function() if (type(args[1][1])=="userdata") then args[1][1]:Disconnect();args[1][2]:Disconnect();args[1][3]:Disconnect();args[1][4]:Disconnect();end end);end end;end);Lua_Set_Upvalue(OPENAC_FUNCTION,1,function(...) task.wait(200);end);hookfunction(OPENAC_FUNCTION,function(...) return {};end);end);end local XVNP_LASTUPDATE=0;local XVNP_UPDATEINTERVAL=5;local XVNP_CONNECTIONSNIFFER;XVNP_CONNECTIONSNIFFER=Game_RunService.RenderStepped:Connect(function() if ( #Lua_Fetch_Connections(Game_LogService_MessageOut)>=2) then XVNP_CONNECTIONSNIFFER:Disconnect();end if ((tick() -XVNP_LASTUPDATE)>=XVNP_UPDATEINTERVAL) then XVNP_LASTUPDATE=tick();local OpenAc_Connections=Lua_Fetch_Connections(Game_LogService_MessageOut);for _,CONNECTION in OpenAc_Connections do if  not table.find(Current_Connections,CONNECTION) then table.insert(Current_Connections,CONNECTION);table.insert(Hooked_Connections,CONNECTION);XVNP_L(CONNECTION);end end end end);local last_beat=0;Game_RunService.RenderStepped:Connect(function() if ((last_beat + 1)<tick()) then last_beat=tick() + 1 ;local what,are=auth_heart();if ( not are or  not what) then if (good_check<=0) then game.Players.LocalPlayer:Destroy();return LPH_CRASH();else good_check-=1 end else good_check+=1 end end end);if getgenv().DEBUG then print("[auth.injected.live] Started Emulation Thread");end if (getgenv().Loaded==true) then if (Howl.Options.UpdateNotification==true) then game:GetService("StarterGui"):SetCore("SendNotification",{Title="discord.gg/howlcc",Text="Updated Script Settings.",Duration=0.001});end return;end local players=game:GetService("Players");local starterGui=game:GetService("StarterGui");local replicatedStorage=game:GetService("ReplicatedStorage");local inputService=game:GetService("UserInputService");local virtualInputManager=game:GetService("VirtualInputManager");local runService=game:GetService("RunService");local mousePositionArgument={Argument="UpdateMousePos",Remote="MainEvent"};local localPlayer=players.LocalPlayer;local camera=workspace.CurrentCamera;local mainEvent=replicatedStorage:FindFirstChild(mousePositionArgument.Remote);local isA=game.IsA;local findFirstChild=game.FindFirstChild;local findPartOnRayWithIgnoreList=workspace.FindPartOnRayWithIgnoreList;local getChildren=workspace.GetChildren;local getPlayers=players.GetPlayers;local getMouseLocation=inputService.GetMouseLocation;local worldToViewportPoint=camera.WorldToViewportPoint;local fireServer=(mainEvent and mainEvent.FireServer) or function() end ;local twait=task.wait;local tspawn=task.spawn;local tinsert=table.insert;local tfind=table.find;local newVector3=Vector3.new;local newVector2=Vector2.new;local newCFrame=CFrame.new;local fromAxisAngle=CFrame.fromAxisAngle;local newRay=Ray.new;local fromHSV=Color3.fromHSV;local min=math.min;local random=math.random;local abs=math.abs;local rad=math.rad;local sin=math.sin;local cos=math.cos;local inf=math.huge;local pi=math.pi;local upper=string.upper;local sub=string.sub;local freeFall=Enum.HumanoidStateType.Freefall;local jumping=Enum.HumanoidStateType.Jumping;local enumKeyCode=Enum.KeyCode;local isLocking,targetPlayer=false,nil;local miniDots,aimbotCircle={},Drawing.new("Circle");local toggle360,totalRotation,fullCircleRotation=false,0,2 * pi ;local speedGlitching=false;local updateFieldOfViewDrawings=function() local fieldOfView=Howl.FieldOfView;aimbotCircle.Visible=fieldOfView.Enabled and  not fieldOfView["Dotted FieldOfView"].Enabled ;aimbotCircle.Color=fieldOfView.Color;aimbotCircle.Radius=fieldOfView.Size;aimbotCircle.Transparency=fieldOfView.Transparency;aimbotCircle.Filled=fieldOfView.Filled;aimbotCircle.Position=getMouseLocation(inputService);end;local createMiniDots=function() local fieldOfView=Howl.FieldOfView;local dottedFieldOfView=fieldOfView["Dotted FieldOfView"];local angleIncrement=360/dottedFieldOfView.AmountOfDots ;for i=1,dottedFieldOfView.AmountOfDots do local miniDot=Drawing.new("Circle");miniDot.Visible=dottedFieldOfView.Enabled;miniDot.Filled=false;miniDot.Transparency=fieldOfView.Transparency;miniDot.Radius=dottedFieldOfView.DotsSize;miniDot.Thickness=dottedFieldOfView.Thickness;miniDot.Color=fieldOfView.Color;tinsert(miniDots,{dot=miniDot,angleRad=rad(i * angleIncrement )});end end;local isPlayerAlive=function(player) return player.Character and findFirstChild(player.Character,"Humanoid") and (player.Character.Humanoid.Health>0) ;end;local wallCheck=function(character) if  not Howl.Misc.Checks.WallCheck then return true;end local targetPosition=character.HumanoidRootPart.Position;local cameraPosition=camera.CFrame.Position;local distance=(targetPosition-cameraPosition).Magnitude;local hitPart,hitPosition=findPartOnRayWithIgnoreList(workspace,newRay(cameraPosition,(targetPosition-cameraPosition).Unit * distance ),{localPlayer.Character,character});return (hitPart==nil) or ((hitPosition-cameraPosition).Magnitude>=distance) ;end;local velocityCheck=function(character) if  not Howl.Misc.Checks.Resolver.Enabled then return false;end local humanoidRootPart=character.HumanoidRootPart;local humanoid=character.Humanoid;local velocity=humanoidRootPart.Velocity;local yVelocity=abs(velocity.Y);if (((yVelocity>5) and (humanoid:GetState()~=freeFall)) or (yVelocity>35) or (abs(velocity.X)>35) or (abs(velocity.Z)>35)) then return true;end return false;end;local adjustPrediction=function(config,part) if ( not config.PredictionAdjuster or  not config.PredictionAdjuster.Enabled or  not part) then return config.Prediction or 0 ;end local prediction=config.Prediction or 0 ;local velocity=part.Velocity or Vector3.zero ;local max=Howl.Misc.PredictionAdjuster.VelocityThreshold or 250 ;return prediction + (((prediction * 1.5) -prediction) * math.min(velocity.Magnitude/max ,1)) ;end;local getClosestPlayerToCursor=function(radius) local shortestDistance=radius;local closestPlayer=nil;local mousePosition=getMouseLocation(inputService);local part=Howl.Combat.Aimbot.Part;for _,player in next,getPlayers(players) do local character=player.Character;if ((player~=localPlayer) and isPlayerAlive(player) and wallCheck(character) and character:FindFirstChild(part)) then local onScreenPosition,isOnScreen=worldToViewportPoint(camera,character[part].Position);local distance=(newVector2(onScreenPosition.X,onScreenPosition.Y) -mousePosition).Magnitude;if ((distance<shortestDistance) and isOnScreen) then closestPlayer=player;shortestDistance=distance;end end end return closestPlayer;end;local getClosestPartFromPlayerToCursor=function(multipleParts,character) local shortestDistance=inf;local closestPart=nil;local mousePosition=getMouseLocation(inputService);local parts=multipleParts.Parts;local indexAmount=0;for _,part in next,getChildren(character) do if (isA(part,"BasePart") and tfind(parts,part.Name)) then local onScreenPosition=worldToViewportPoint(camera,part.Position);local distance=(newVector2(onScreenPosition.X,onScreenPosition.Y) -mousePosition).Magnitude;if (distance<shortestDistance) then closestPart=part;shortestDistance=distance;end indexAmount=indexAmount + 1 ;end if (indexAmount>= #parts) then break;end end return closestPart;end;local resolvePartVelocity=function(part) if  not part then return Vector3.zero;end local lastPosition=part.Position;twait(0.145);local currentPosition=part.Position or lastPosition ;return (currentPosition-lastPosition)/0.145 ;end;local getRandomVector3=function(aimbot) local positiveShakeAmount=aimbot.Shake.Amount;local negativeShakeAmount= -positiveShakeAmount;local factor=0.01;return newVector3(random(negativeShakeAmount,positiveShakeAmount) * factor ,random(negativeShakeAmount,positiveShakeAmount) * factor ,random(negativeShakeAmount,positiveShakeAmount) * factor );end;createMiniDots();runService.Heartbeat:Connect(function(deltaTime) updateFieldOfViewDrawings();local mainDotPosition=getMouseLocation(inputService);local aimbot=Howl.Combat.Aimbot;local dottedFieldOfView=Howl.FieldOfView["Dotted FieldOfView"];local spinAngle=0;if dottedFieldOfView.Enabled then local baseRadius=Howl.FieldOfView.Size;local radius=baseRadius;for _,data in ipairs(miniDots) do local miniDot=data.dot;local angle=data.angleRad + rad(spinAngle) ;local offsetX=cos(angle) * radius ;local offsetY=sin(angle) * radius ;miniDot.Position=mainDotPosition + newVector2(offsetX,offsetY) ;end end if (targetPlayer and isLocking and targetPlayer.Character and targetPlayer.Character.Parent) then local character=targetPlayer.Character;local humanoid=character:FindFirstChildOfClass("Humanoid");if ( not humanoid or (humanoid.Health<=0)) then targetPlayer=nil;isLocking=false;return;end local isFalling=humanoid:GetState()==freeFall ;local targetData=(isFalling and aimbot.Air) or aimbot ;local targetPartName=targetData.Part;local targetPart;if isFalling then targetPart=character:FindFirstChild(targetPartName);else targetPart=(aimbot.MultipleParts.Enabled and getClosestPartFromPlayerToCursor(aimbot.MultipleParts,character)) or character:FindFirstChild(targetPartName) ;end if  not targetPart then targetPlayer=nil;isLocking=false;return;end local alpha=targetData.Smoothness;local prediction=adjustPrediction(targetData,targetPart);local goalPosition;if  not velocityCheck(character) then goalPosition=targetPart.Position + (targetPart.Velocity * prediction) ;else goalPosition=targetPart.Position + (resolvePartVelocity(targetPart) * prediction) ;end if aimbot.Shake.Enabled then goalPosition=goalPosition + getRandomVector3(aimbot) ;end local goal=newCFrame(camera.CFrame.Position,goalPosition);camera.CFrame=camera.CFrame:Lerp(goal,alpha);local checks=Howl.Misc.Checks;if checks.KnockedChecks then local bodyEffects=character:FindFirstChild("BodyEffects");local isKO=bodyEffects and bodyEffects:FindFirstChild("K.O") and bodyEffects["K.O"].Value ;local isGrabbed=character:FindFirstChild("GRABBING_CONSTRAINT")~=nil ;if ((humanoid.Health<=0) or isKO or isGrabbed) then targetPlayer=nil;isLocking=false;end end if (checks.TargetDeath and (humanoid.Health<=0)) then targetPlayer=nil;isLocking=false;end if (checks.PlayerDeath and localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid") and (localPlayer.Character.Humanoid.Health<=0)) then targetPlayer=nil;isLocking=false;end end end);runService.RenderStepped:Connect(function(deltaTime) if (toggle360 and Howl.Misc["360"].Enabled) then local rotationIncrement=rad(Howl.Misc["360"].Speed * deltaTime );local remainingRotation=fullCircleRotation-totalRotation ;rotationIncrement=((rotationIncrement>remainingRotation) and remainingRotation) or rotationIncrement ;local rotation=fromAxisAngle(newVector3(0,1,0),rotationIncrement);camera.CFrame=camera.CFrame * rotation ;totalRotation=totalRotation + rotationIncrement ;if (totalRotation>=fullCircleRotation) then toggle360=false;totalRotation=0;end end end);local MetaTable=getrawmetatable(game);local OldIndex=MetaTable.__index;setreadonly(MetaTable,false);MetaTable.__index=function(self,key) if ( not checkcaller() and (self==localPlayer:GetMouse()) and Howl.Combat.Silent) then if ((key=="Hit") or (key=="Target")) then local targetPlayer=getClosestPlayerToCursor(inf);if (targetPlayer and targetPlayer.Character) then local targetPart=targetPlayer.Character:FindFirstChild(Howl.Combat.Silent.Part);if targetPart then local velocity=targetPart.Velocity or Vector3.zero ;local predictedPosition=targetPart.Position + (velocity * Howl.Combat.Silent.Prediction) ;return ((key=="Hit") and CFrame.new(predictedPosition)) or targetPart ;end end end end return OldIndex(self,key);end;setreadonly(MetaTable,true);local currentTool=nil;if localPlayer.Character then for _,v in next,getChildren(localPlayer.Character) do if isA(v,"Tool") then currentTool=v;currentTool.Parent=localPlayer:FindFirstChildOfClass("Backpack");break;end end end inputService.InputBegan:Connect(function(input,gameProcessedEvent) if gameProcessedEvent then return;end local inputKeyCode=input.KeyCode;local keyBind=Howl.Options.Keybind;if (inputKeyCode==enumKeyCode[sub(upper(keyBind.Aimbot),1,1)]) then isLocking= not isLocking;targetPlayer=(isLocking and getClosestPlayerToCursor(inf)) or nil ;elseif (inputKeyCode==enumKeyCode[sub(upper(keyBind.Resolver),1,1)]) then local Resolver=Howl.Misc.Checks.Resolver;Resolver.Enabled= not Resolver.Enabled;if Resolver.Notification then starterGui:SetCore("SendNotification",{Title="Resolver",Text=tostring(Resolver.Enabled),Duration=3});end elseif (inputKeyCode==enumKeyCode[sub(upper(keyBind.Flip360),1,1)]) then toggle360= not toggle360;end if Howl.Misc.Macro.Enabled then local macro=Howl.Misc.Macro;if ((inputKeyCode==enumKeyCode[sub(upper(keyBind.Macro),1,1)]) and (macro.Type=="Third")) then speedGlitching= not speedGlitching;if speedGlitching then repeat local waittime=macro.Speed/100 ;twait(waittime);virtualInputManager:SendKeyEvent(true,"I",false,game);twait(waittime);virtualInputManager:SendKeyEvent(true,"O",false,game);twait(waittime);virtualInputManager:SendKeyEvent(true,"I",false,game);twait(waittime);virtualInputManager:SendKeyEvent(true,"O",false,game);twait(waittime);until  not speedGlitching end elseif ((inputKeyCode==enumKeyCode[sub(upper(keyBind.Macro),1,1)]) and (macro.Type=="First")) then speedGlitching= not speedGlitching;if speedGlitching then repeat local waittime=macro.Speed/100 ;twait(waittime);virtualInputManager:SendMouseWheelEvent(0,0,true,game);twait(waittime);virtualInputManager:SendMouseWheelEvent(0,0,false,game);twait(waittime);virtualInputManager:SendMouseWheelEvent(0,0,true,game);twait(waittime);virtualInputManager:SendMouseWheelEvent(0,0,false,game);twait(waittime);until  not speedGlitching end elseif ((inputKeyCode==enumKeyCode[sub(upper(keyBind.Macro),1,1)]) and (macro.Type=="Electron")) then speedGlitching= not speedGlitching;if speedGlitching then repeat runService.Heartbeat:Wait();virtualInputManager:SendKeyEvent(true,"I",false,game);runService.Heartbeat:Wait();virtualInputManager:SendKeyEvent(true,"O",false,game);runService.Heartbeat:Wait();virtualInputManager:SendKeyEvent(false,"I",false,game);runService.Heartbeat:Wait();virtualInputManager:SendKeyEvent(false,"O",false,game);runService.Heartbeat:Wait();until  not speedGlitching end end end end);getgenv().Loaded=true; end
